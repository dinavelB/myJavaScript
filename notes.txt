In JavaScript, Objects are King.
if you understand objects you learned javascript


search for JavaScript Learning:
1. Built-in functions in JavaScript
2. learn bitwise operators
3,study javaScript assignments
4. study javascript features

to treat js a statement that has quote, without concatenation you need to add \ before the quote.
ex. 
var ExampleJs = "My \" so called \" Life";
alert (ExampleJS); 
it will be alerted in My "so called" Life

JavaScript variables are containers for storing data values.
   
    All JavaScript variables must be identified with unique names.

Creating a variable in JavaScript is called "declaring" a variable. 
   
    function substitute () {var myValue = document.getElementByldQ.value;}
           - function name is substitute
           - variable name is myValue

my takeaways {
js reads on top to bottom , if the argument satisfy the condition or the option, it will not execute the another option.
If you put a number in quotes, the rest of the numbers will be treated as strings, and concatenated.
the let and const cant be used outside the curly brackets unlike the var.
3. the parenthesis in arithmetic expression will be computed first even it has a multiplication outside. And also if parenthesis does not exist, the multiplication will be the one computed first.
4. let and const can't be redeclared/ change
5. javaScript reads the line of code from left to right
6. same variable can hold different data types.
7. BigInt is for super large numbers that cant be represented by types of numbers in javaScript
8. JavaScript arrays are written with square brackets.
9. JavaScript objects are written with curly braces {}.
10. Every function gives back something. so always use return
11. const and let cannot change the value, unlike the var, it can be redeclared.
12.It is a common practice to declare objects with the const keyword.
13. An object literal is a list of name:value pairs inside curly braces {}.
14. object literals are also called object initializers.
15. But, there is no need to use new Object(), they execute the same with " const car = {}" 
// const car = new Object()
For readability, simplicity and execution speed, use the object literal method. // const car = {};
16. car.name = "red";
	name = //named value and called property.
	value = red
17. You can use this to refer to any object, not just a person.
18. the "this" keyword is use for calling a property within the function
19. method is a function that is belong to the object
20. function is a special type of object
21. use "this" Only When Itâ€™s a Method or Constructor.
22, constructor is a function that is use to create ,many objects.
23. A constructor function can also have methods.